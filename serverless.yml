org: albertmorales1398
app: swapi-app
service: rimac-test-swapi

package:
  include:
    - src/build/swagger.json

provider:
  name: aws
  stage: beta
  region: us-east-1
  runtime: nodejs20.x
  environment:
    DB_HOST: ${ssm:/swapi-mysql/${self:provider.stage}/db_host} 
    DB_PORT: ${ssm:/swapi-mysql/${self:provider.stage}/db_port} 
    DB_USER: ${ssm:/swapi-mysql/${self:provider.stage}/db_user} 
    DB_PASSWORD: ${ssm:/swapi-mysql/${self:provider.stage}/db_password} 
    DB_NAME: ${ssm:/swapi-mysql/${self:provider.stage}/db_name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/HistoryTable
        - arn:aws:dynamodb:${self:provider.region}:*:table/CacheTable
        - arn:aws:dynamodb:${self:provider.region}:*:table/CustomDataTable
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        - arn:aws:ssm:${self:provider.region}:*:parameter/swapi-mysql/${self:provider.stage}/*

custom:
  environment:
    HISTORY_TABLE: HistoryTable
    CACHE_TABLE: CacheTable
    CUSTOM_DATA_TABLE: CustomDataTable
    DB_HOST: ${self:provider.environment.DB_HOST}
    DB_PORT: ${self:provider.environment.DB_PORT}
    DB_USER: ${self:provider.environment.DB_USER}
    DB_PASSWORD: ${self:provider.environment.DB_PASSWORD}
    DB_NAME: ${self:provider.environment.DB_NAME}
  allowedIpRange: 203.0.113.5/32
  documentation:
    version: '1'
    title: 'rimac-test-swapi API'
    description: 'Test API para Rimac con integraci√≥n a SWAPI y PokeAPI'
    models: {}

plugins:
  - serverless-offline

functions:
  api:
    handler: src/handler.handler
    timeout: 10
    memorySize: 256
    events:
      - httpApi: "*"


resources:
  Resources:
    # MyRDSSecurityGroup:
    #   Type: AWS::EC2::SecurityGroup
    #   Properties:
    #     GroupDescription: Access to RDS
    #     VpcId: vpc-xxxxxxxx      
    #     SecurityGroupIngress:
    #       - IpProtocol: tcp
    #         FromPort: 3306
    #         ToPort: 3306
    #         CidrIp: ${self:custom.allowedIpRange}
    # MyRDS:
    #   Type: AWS::RDS::DBInstance
    #   Properties:
    #     DBInstanceIdentifier: swapi-mysql
    #     AllocatedStorage: '20'
    #     DBInstanceClass: db.t4g.micro
    #     Engine: mysql
    #     MasterUsername: admin
    #     MasterUserPassword: xxxx
    #     DBName: swapi_db
    #     PubliclyAccessible: true
    #     BackupRetentionPeriod: 0
    HistoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HistoryTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    CacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CacheTable
        AttributeDefinitions:
          - AttributeName: cacheKey
            AttributeType: S
        KeySchema:
          - AttributeName: cacheKey
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    CustomDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CustomDataTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST